{"version":3,"sources":["NewTodoForm.js","Todo.js","TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["NewTodoForm","props","state","task","handleChange","bind","handleSubmit","evt","this","setState","target","name","value","preventDefault","createTodo","id","uuid","completed","className","onSubmit","htmlFor","type","placeholder","onChange","Component","Todo","isEditing","handleRemove","handleUpdate","removeTodo","updateTodo","onClick","toggleTodo","TodoList","todos","create","remove","update","toggleCompletion","newTodo","filter","t","updatedTask","updatedTodos","map","todo","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7b49c88.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport uuid from \"uuid/dist/v4\";\r\nimport './NewTodoForm.css';\r\nclass NewTodoForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={task: \"\"};\r\n        this.handleChange=this.handleChange.bind(this);\r\n        this.handleSubmit=this.handleSubmit.bind(this);\r\n    }\r\n    handleChange(evt){\r\n        this.setState({\r\n            [evt.target.name]:evt.target.value\r\n        });\r\n    }\r\n    handleSubmit(evt) {\r\n        evt.preventDefault();\r\n        this.props.createTodo({...this.state, id: uuid(), completed: false});\r\n        this.setState({task: \"\"});\r\n    }\r\n    render() {\r\n        return (\r\n            <form className=\"NewTodoForm\" onSubmit={this.handleSubmit}>\r\n                <label htmlFor='task'>New Todo</label>\r\n                <input type='text' name=\"task\" placeholder='New Todo' id='task' value={this.state.task} onChange={this.handleChange} />\r\n                <button>Add</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewTodoForm;","import React, { Component } from 'react';\r\nimport \"./Todo.css\";\r\nclass Todo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isEditing: false, task: this.props.task };\r\n        this.handleRemove = this.handleRemove.bind(this);\r\n        this.handleUpdate = this.handleUpdate.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleRemove() {\r\n        this.props.removeTodo(this.props.id);\r\n    }\r\n    handleUpdate(evt) {\r\n        evt.preventDefault();\r\n        this.props.updateTodo(this.props.id, this.state.task);\r\n        this.setState({ isEditing: false });\r\n    }\r\n    handleChange(evt) {\r\n        this.setState({\r\n            [evt.target.name]: evt.target.value\r\n        });\r\n    }\r\n    render() {\r\n        let result;\r\n        if (this.state.isEditing) {\r\n            result = (\r\n                <div className=\"Todo\">\r\n                    <form onSubmit={this.handleUpdate}>\r\n                        <input type='text' value={this.state.task} name=\"task\" onChange={this.handleChange} />\r\n                        <button>Save</button>\r\n                    </form>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            result = (\r\n                <div className=\"Todo\">\r\n                    <button onClick={this.handleRemove}>X</button>\r\n                    <button onClick={() => this.setState({ isEditing: !this.state.isEditing })}>EDIT</button>\r\n                    <li className={this.props.completed ? \"Todo completed\" : \"Todo task\"} onClick={() => this.props.toggleTodo(this.props.id)} >\r\n                        {this.props.task}\r\n                    </li>\r\n                </div>\r\n            );\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport default Todo;","import React, { Component } from 'react';\r\nimport NewTodoForm from './NewTodoForm';\r\nimport Todo from './Todo';\r\nimport \"./TodoList.css\";\r\nclass TodoList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { todos: [] };\r\n        this.create = this.create.bind(this);\r\n        this.remove = this.remove.bind(this);\r\n        this.update = this.update.bind(this);\r\n        this.toggleCompletion = this.toggleCompletion.bind(this);\r\n    }\r\n    create(newTodo) {\r\n        this.setState({\r\n            todos: [...this.state.todos, newTodo]\r\n        });\r\n    }\r\n    remove(id) {\r\n        this.setState({\r\n            todos: this.state.todos.filter(t => t.id !== id)\r\n        });\r\n    }\r\n    update(id, updatedTask) {\r\n        const updatedTodos = this.state.todos.map(todo => {\r\n            if (todo.id === id) {\r\n                return { ...todo, task: updatedTask };\r\n            }\r\n            return todo;\r\n        });\r\n        this.setState({ todos: updatedTodos });\r\n    }\r\n    toggleCompletion(id) {\r\n        const updatedTodos = this.state.todos.map(todo => {\r\n            if (todo.id === id) {\r\n                return { ...todo, completed: !todo.completed };\r\n            }\r\n            return todo;\r\n        });\r\n        this.setState({ todos: updatedTodos });\r\n    }\r\n    render() {\r\n        const todos = this.state.todos.map(todo => {\r\n            return <Todo key={todo.id} id={todo.id} task={todo.task} completed={todo.completed} removeTodo={this.remove} updateTodo={this.update} toggleTodo={this.toggleCompletion} />\r\n        });\r\n        return (\r\n            <div className=\"TodoList\">\r\n                <h1> Todo List <span>A Simple TODO LIST </span></h1>\r\n                <ul>\r\n                    {todos}\r\n                </ul>\r\n                <NewTodoForm createTodo={this.create} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoList;","import TodoList from './TodoList';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}